Problems solved:

1. Binary Tree Level Order Traversal - LeetCode 102

Difficulty - Medium 

Problem Statement - 
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Approach- 
If the root is NULL, return an empty vector.
Initialize an empty queue and push the root node into it.
While the queue is not empty:
    Get the number of nodes at the current level (queue size).
    Initialize an empty vector to store the current levelâ€™s values.
    For each node in the current level:
        Pop the node from the queue.
        Add its value to the level vector.
        If the node has a left child, push it into the queue.
        If the node has a right child, push it into the queue.
    Add the level vector to the final result vector.
Return the result containing values level by level.

2. Rotate Image - LeetCode 48

Difficulty- Medium

Problem Statement- 
You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).
You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Approach - 
Traverse the matrix and transpose it by swapping matrix[i][j] with matrix[j][i] for all i < j.
After the transpose is complete, reverse each row in the matrix.
For each row, initialize two pointers at the start and end.
Swap the elements at both pointers and move the pointers towards the center until they meet.
After all rows are reversed, the matrix is rotated 90 degrees clockwise.
